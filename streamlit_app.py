import streamlit as st
import os
import requests

server_url = os.environ["project_1_url"]

# App information and setup
project_title = "Test Project 2"
project_desc = """
To create an AI agent that takes a product category, for example: “Baby Car Seats”,
“Pushchairs”, “Bluetooth Earphones” etc, and then researches online to find the 10
best/most popular products in that category. Then, it extracts all necessary information on
these products, and uses GPT-3.5 to produce content for a “Best Of” article in a format like
this: https://www.yourbabyclub.co.uk/the-best-prams-of-2023-562
As you can see from the article, the content required will be:
● Summary of all products with direct links to the product, categorised like “Best
(product) for (situation/activity)” - GPT should be used to come up with these
categories
● For each product:
○ a product image
○ a few paragraphs reviewing the item
○ 1-3 points on “What we like” and “Who it’s best for”
○ Other relevant statistics such as dimensions, weight
○ Price
● 10-15 common questions and comprehensive answers (again, generated by GPT) on
things like “How much should I spend on (product type)?”, “What is a (product type)”
etc
"""
st.set_page_config(page_title=project_title)

def create_article(product_category, openai_key):
    try:
        response = requests.post(f'{server_url}/create-article', 
                                    data={'product_category': product_category,
                                          'openai_key': openai_key},
                                    timeout=600)
    except requests.exceptions.SSLError as e:
        st.error(f"SSL Error: {e}")
    except requests.exceptions.RequestException as e:
        st.error(f"Request failed: {e}")

    if response.status_code == 200:
        json_data = response.json()
        if "response" in json_data:
            st.markdown(json_data['response'])
        elif "error" in json_data:
            st.error(f"Server error: {json_data['error']}")
    else:
        st.error('Request failed')

def main():
    st.title(project_title)
    st.write(project_desc)

    try:
        response = requests.get(f'{server_url}/ping')
        if response.status_code == 200:
            if response.content:
                json_data = response.json()
                if json_data['text'] == "pong":
                    st.success("• Connected to the server.")
                else:
                    st.warning(f"• Server is running but returned unexpected response.")
            else:
                st.warning(f"• Server returned an empty response.")
        else:
            st.warning(f"• Server returned a {response.status_code} status code.")

    except requests.exceptions.ConnectionError:
        st.error("• Could not connect to the server.")

#########################################
    openai_key = st.text_input('OpenAI API key')

    with st.form('input_form'):
        product_category = st.text_area("Enter a product category:", "birthday gifts for 6 year olds")
        submit = st.form_submit_button("Send!")
        # if not openai_key.startswith('sk-'):
        #     st.warning('Please enter your OpenAI API key!')
        # elif openai_key.startswith('sk-') and submit:
        if submit:
            with st.spinner("Fetching search results.."):
                create_article(product_category, openai_key)

if __name__ == "__main__":
    main()